# Copyright David Abrahams 2006. Distributed under the Boost
# Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

import python ;

if ! [ python.configured ]
{
    ECHO "notice: no Python configured in user-config.jam" ;
    ECHO "notice: will use default configuration" ;
    using python ;
}

# Specify the path to the Boost project.  If you move this project,
# adjust this path to refer to the Boost root directory.
use-project boost
  : /software/software/scientific/OS_tools/boost-trunk ;

# Set up the project-wide requirements that everything uses the
# boost_python library from the project whose global ID is
# /boost/python.
project
  : requirements <library>/boost/python//boost_python 
				 <include>/usr/local/lib64/python2.7/site-packages/numpy/core/include 
				 <include>/usr/include/python2.7
				 ;
# Declare the three extension modules.  You can specify multiple
# source files after the colon separated by spaces.
#python-extension hello_ext : hello.cpp ;
#python-extension class_ext : class_ext.cpp ;
python-extension linalg : linalg.cpp gauss_seidel.cpp thomas.cpp ; 
#python-extension gauss_seidel : gauss_seidel.cpp ;


# Put the extension and Boost.Python DLL in the current directory, so
# that running script by hand works.
#install convenient_copy 
#  : hello_ext 
#  : <install-dependencies>on <install-type>SHARED_LIB <install-type>PYTHON_EXTENSION 
#    <location>. 
#  ;

#install dist 
#  : class_ext 
#  : <install-dependencies>on <install-type>SHARED_LIB <install-type>PYTHON_EXTENSION 
#    <location>. 
#  ;

install dist 
  : linalg 
  : <install-dependencies>on <install-type>SHARED_LIB <install-type>PYTHON_EXTENSION 
    <location>. 
  ;

#install dist 
#  : gauss_seidel 
#  : <install-dependencies>on <install-type>SHARED_LIB <install-type>PYTHON_EXTENSION 
#    <location>. 
#  ;


# A little "rule" (function) to clean up the syntax of declaring tests
# of these extension modules.
local rule run-test ( test-name : sources + )
{
    import testing ;
    testing.make-test run-pyd : $(sources) : : $(test-name) ;
}

# Declare test targets
#run-test hello : class_ext hello_ext hello.py ;


run-test hello : linalg Main_Lid_DrivenCavity_NS_2D.py ;

